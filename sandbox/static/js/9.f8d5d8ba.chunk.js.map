{"version":3,"sources":["components/WidgetsTable/index.js","components/WidgetsTable/WidgetsTable.jsx","content/WidgetsTablePage/WidgetsTablePage.jsx","content/WidgetsTablePage/buildTableRowsFromRegistry.js","content/WidgetsTablePage/buildTableHeaders.js","content/WidgetsTablePage/index.js","components/Info/Info.jsx","components/AppFooter/AppFooter.jsx","components/AppFooter/index.js","components/AppHeader/AppHeader.jsx","components/AppHeader/index.js"],"names":["WidgetsTable","rows","headers","descriptions","useState","filtered","setFiltered","keyword","setKeyword","fuse","Fuse","keys","DataTable","render","getHeaderProps","getRowProps","getTableProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","TableToolbarSearch","onChange","e","target","value","search","map","item","Table","TableHead","TableRow","TableExpandHeader","header","TableHeader","isSortable","key","TableBody","row","widgetId","Fragment","TableExpandRow","cells","cell","TableCell","className","info","id","TableExpandedRow","colSpan","length","to","WidgetsTablePage","widgetTypes","registry","reduce","carry","shortcode","description","Object","assign","AppHeader","Breadcrumb","noTrailingSlash","BreadcrumbItem","href","isCurrentPage","variant","name","version","owner","Link","email","style","verticalAlign","translations","UnorderedList","langcode","ListItem","CodeSnippet","type","links","Dropdown","label","items","text","substr","itemToString","url","selectedItem","window","location","details","AppFooter","InfoSection","children","heading","InfoCard","props","splitHeading","phrase","splitPhrase","split","thirdWord","pop","join","createArrayFromPhrase","body","icon","HeaderContainer","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderGlobalBar"],"mappings":"8XACeA,ECqBM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAAmB,EACxBC,mBAASH,GADe,mBACjDI,EADiD,KACvCC,EADuC,OAE1BF,mBAAS,IAFiB,mBAEjDG,EAFiD,KAExCC,EAFwC,KAIlDC,EAAO,IAAIC,IAAKT,EAAM,CAC1BU,KAAM,CAAC,UAGT,OACE,cAACC,EAAA,EAAD,CACEX,KAAMM,EAAUF,EAAWJ,EAC3BC,QAASA,EACTW,OAAQ,gBAAGZ,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASY,EAAlB,EAAkBA,eAAgBC,EAAlC,EAAkCA,YAAaC,EAA/C,EAA+CA,cAA/C,OACN,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcC,aAAW,qBAAzB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GACTf,EAAWe,EAAEC,OAAOC,OACpBnB,EAAYG,EAAKiB,OAAOH,EAAEC,OAAOC,OAAOE,KAAI,qBAAGC,gBAMvD,eAACC,EAAA,EAAD,2BAAWb,KAAX,cACE,cAACc,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACC9B,EAAQyB,KAAI,SAACM,GAAD,OACX,cAACC,EAAA,EAAD,2BAEMpB,EAAe,CACjBmB,SACAE,WAAYF,EAAOE,cAJvB,aAOGF,EAAOA,SAPV,iBACiBA,EAAOG,cAW9B,cAACC,EAAA,EAAD,UACGpC,EAAK0B,KAAI,SAACW,GACT,IAAMC,EAAQ,UAAMxB,EAAY,CAAEuB,QAAOF,KACzC,OACE,eAAC,IAAMI,SAAP,WACE,cAACC,EAAA,EAAD,2BAAoB1B,EAAY,CAAEuB,SAAlC,aACGA,EAAII,MAAMf,KAAI,SAACgB,GAAD,OACb,cAACC,EAAA,EAAD,CAAyBC,UAAS,0BAAqBF,EAAKG,KAAKb,QAAjE,SACGU,EAAKlB,OADQkB,EAAKI,UAKzB,eAACC,EAAA,EAAD,CAAkBC,QAAS/C,EAAQgD,OAAS,EAA5C,UACE,6CACA,8BAAM/C,EAAaoC,KACnB,qBAAKM,UAAU,2BAAf,SACE,eAAC,IAAD,CAAMM,GAAE,uBAAkBZ,GAAYM,UAAU,4BAAhD,0BACe,cAAC,IAAD,CAAcA,UAAU,4BAbxBP,EAAIS,oB,yFClB5BK,EAxCU,WACvB,ICNuBC,EDMjBlD,EAAemD,EAASC,QAC5B,SAACC,EAAD,OAAUC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,YAArB,OAAuCC,OAAOC,OAAOJ,EAAdG,OAAA,IAAAA,CAAA,GAAwBF,EAAYC,MAC3E,IAEF,OACE,qCACE,cAACG,EAAA,EAAD,IACA,sBAAKhB,UAAU,6CAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,eAACiB,EAAA,EAAD,CAAYC,iBAAe,EAA3B,UACE,cAACC,EAAA,EAAD,CAAgBC,KAAK,IAArB,kBACA,cAACD,EAAA,EAAD,CAAgBE,eAAa,EAACD,KAAK,IAAnC,6BAIF,oBAAIpB,UAAU,wBAAd,2BACA,8MAMJ,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CACEsB,QAAQ,OACRjE,QErCL,CACL,CACEkC,IAAK,OACLH,OAAQ,OACRE,YAAY,GAEd,CACEC,IAAK,UACLH,OAAQ,UACRE,YAAY,GAEd,CACEC,IAAK,eACLH,OAAQ,eACRE,YAAY,GAEd,CACEC,IAAK,QACLH,OAAQ,QACRE,YAAY,GAEd,CACEC,IAAK,QACLH,OAAQ,QACRE,YAAY,GAEd,CACEC,IAAK,UACLH,OAAQ,GACRE,YAAY,IFSJlC,MClCWoD,EDkCsBC,ECjCtCD,EAAY1B,KAAI,SAACC,GACtB,MAAO,CACLmB,GAAInB,EAAI,UACRwC,KAAMxC,EAAI,MACV8B,YAAa9B,EAAI,YACjByC,QAASzC,EAAI,QACb0C,MAAO1C,EAAI,MACT,eAAC2C,EAAA,EAAD,CAAMN,KAAI,iBAAYrC,EAAI,MAAU4C,OAApC,UACE,cAAC,IAAD,CAAcC,MAAO,CAAEC,cAAe,YADxC,IACwD9C,EAAI,MAAUwC,QAGtE,GAEFO,aACE,cAACC,EAAA,EAAD,CAAe/B,UAAU,sBAAzB,SACGjB,EAAI,sBAA0BD,KAAI,SAACkD,GAAD,OACjC,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAaC,KAAK,SAAlB,SAA4BH,KAD9B,eAAuBA,SAM7BI,MACE,cAACC,EAAA,EAAD,CACEnC,GAAG,UACHoC,MAAM,oBACNC,MAAO,CACL,CACEC,KAAM,OACNtC,GAAG,iBAAD,OAAmBnB,EAAI,cAAkB0D,OAAO,KAEpD,CACED,KAAM,aACNtC,GAAInB,EAAI,gBAGZ2D,aAAc,SAAC3D,GAAD,OAAWA,EAAOA,EAAKyD,KAAO,IAC5C/D,SAAU,YAAoC,IAAbkE,EAAY,EAAhCC,aAAgB1C,GAC3B2C,OAAOC,SAAS1B,KAAOuB,KAI7BI,QACE,cAAC,IAAD,CAAYzC,GAAE,uBAAkBvB,EAAI,WAApC,SACE,cAAC,IAAD,WDVIzB,aAAcA,QAIpB,cAAC0F,EAAA,EAAD,WG3COzC,a,gDCSf,IAAM0C,EAAc,SAAC,GAAD,IAAGjD,EAAH,EAAGA,UAAWkD,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,QAAxB,OAClB,0BAASnD,UAAS,kBAAaA,EAAb,iBAAlB,UACE,qBAAKA,UAAU,0CAAf,SACE,oBAAIA,UAAU,wBAAd,SAAuCmD,MAExCD,MAICE,EAAW,SAACC,GAChB,IAAMC,EAhBR,SAA+BC,GAC7B,IAAMC,EAAcD,EAAOE,MAAM,KAC3BC,EAAYF,EAAYG,MAC9B,MAAO,CAACH,EAAYI,KAAK,KAAMF,GAaVG,CAAsBR,EAAMF,SAEjD,OACE,0BAASnD,UAAU,qEAAnB,UACE,qBAAIA,UAAU,qBAAd,oBACMsD,EAAa,GADnB,KAEE,iCAASA,EAAa,QAExB,mBAAGtD,UAAU,kBAAb,SAAgCqD,EAAMS,OACrCT,EAAMU,S,2BCLEf,EApBG,kBAChB,eAAC,EAAD,CAAaG,QAAQ,iBAAiBnD,UAAU,mBAAhD,UACE,cAAC,EAAD,CACEmD,QAAQ,2BACRW,KAAK,iKACLC,KAAM,cAAC,IAAD,MAER,cAAC,EAAD,CACEZ,QAAQ,sBACRW,KAAK,gKACLC,KAAM,cAAC,IAAD,MAER,cAAC,EAAD,CACEZ,QAAQ,yBACRW,KAAK,2NACLC,KAAM,cAAC,IAAD,UClBGf,O,6JCgDAhC,EAjCG,kBAChB,cAACgD,EAAA,EAAD,CACEhG,OAAQ,gBAAGiG,EAAH,EAAGA,kBAAmBC,EAAtB,EAAsBA,qBAAtB,OACN,eAACC,EAAA,EAAD,CAAQ7F,aAAW,iBAAnB,UACE,cAAC8F,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACE/F,aAAW,YACXgG,QAASJ,EACTK,SAAUN,IAEZ,cAACO,EAAA,EAAD,CAAYC,QAAS/C,IAAMpB,GAAG,IAAIoE,OAAO,aAAzC,4BAGA,cAACC,EAAA,EAAD,CAAkBrG,aAAW,iBAA7B,SACE,cAACsG,EAAA,EAAD,CAAgBH,QAAS/C,IAAMpB,GAAG,gBAAlC,4BAIF,cAACuE,EAAA,EAAD,CAASvG,aAAW,kBAAkBwG,SAAUb,EAAmBc,cAAc,EAAjF,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,CAAgBH,QAAS/C,IAAMpB,GAAG,gBAAlC,gCAMN,cAAC4E,EAAA,EAAD,WC1COlE,O","file":"static/js/9.f8d5d8ba.chunk.js","sourcesContent":["import WidgetsTable from './WidgetsTable';\nexport default WidgetsTable;\n","import React, { useState } from 'react';\nimport Fuse from 'fuse.js';\nimport PropTypes from 'prop-types';\nimport {\n  DataTable,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableExpandedRow,\n  TableExpandHeader,\n  TableExpandRow,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableToolbar,\n  TableToolbarContent,\n  TableToolbarSearch,\n} from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRight16 } from '@carbon/icons-react';\n\nconst WidgetsTable = ({ rows, headers, descriptions }) => {\n  const [filtered, setFiltered] = useState(rows);\n  const [keyword, setKeyword] = useState('');\n\n  const fuse = new Fuse(rows, {\n    keys: ['name'],\n  });\n\n  return (\n    <DataTable\n      rows={keyword ? filtered : rows}\n      headers={headers}\n      render={({ rows, headers, getHeaderProps, getRowProps, getTableProps }) => (\n        <TableContainer>\n          <TableToolbar aria-label=\"data table toolbar\">\n            <TableToolbarContent>\n              <TableToolbarSearch\n                onChange={(e) => {\n                  setKeyword(e.target.value);\n                  setFiltered(fuse.search(e.target.value).map(({ item }) => item));\n                }}\n              />\n            </TableToolbarContent>\n          </TableToolbar>\n\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map((header) => (\n                  <TableHeader\n                    key={`header-${header.key}`}\n                    {...getHeaderProps({\n                      header,\n                      isSortable: header.isSortable,\n                    })}\n                  >\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => {\n                const widgetId = `${getRowProps({ row }).key}`;\n                return (\n                  <React.Fragment key={row.id}>\n                    <TableExpandRow {...getRowProps({ row })}>\n                      {row.cells.map((cell) => (\n                        <TableCell key={cell.id} className={`bx--table-cell__${cell.info.header}`}>\n                          {cell.value}\n                        </TableCell>\n                      ))}\n                    </TableExpandRow>\n                    <TableExpandedRow colSpan={headers.length + 1}>\n                      <h6>Description</h6>\n                      <div>{descriptions[widgetId]}</div>\n                      <div className=\"bx--expandable-row--ctas\">\n                        <Link to={`/widget-type/${widgetId}`} className=\"bx--btn bx--btn--tertiary\">\n                          More details <ArrowRight16 className=\"bx--btn__icon\" />\n                        </Link>\n                      </div>\n                    </TableExpandedRow>\n                  </React.Fragment>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nWidgetsTable.propTypes = {\n  headers: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      header: PropTypes.string,\n    }),\n  ),\n  rows: PropTypes.arrayOf(PropTypes.object),\n  descriptions: PropTypes.object,\n};\n\nexport default WidgetsTable;\n","import React from 'react';\nimport AppHeader from '../../components/AppHeader';\nimport AppFooter from '../../components/AppFooter';\nimport WidgetsTable from '../../components/WidgetsTable';\nimport buildTableHeaders from './buildTableHeaders';\nimport buildTableRowsFromRegistry from './buildTableRowsFromRegistry';\n\nimport registry from '../../data/registry.json';\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nconst WidgetsTablePage = () => {\n  const descriptions = registry.reduce(\n    (carry, { shortcode, description }) => Object.assign(carry, { [shortcode]: description }),\n    {},\n  );\n  return (\n    <>\n      <AppHeader />\n      <div className=\"bx--grid bx--grid--full-width landing-page\">\n        <div className=\"bx--row landing-page__banner\">\n          <div className=\"bx--col-lg-16\">\n            <Breadcrumb noTrailingSlash>\n              <BreadcrumbItem href=\"/\">Home</BreadcrumbItem>\n              <BreadcrumbItem isCurrentPage href=\"/\">\n                Widget types\n              </BreadcrumbItem>\n            </Breadcrumb>\n            <h1 className=\"landing-page__heading\">Widgets types</h1>\n            <div>\n              The collection of available widget types in the widget repository. Widget types in the\n              repository are available in the CMS integrations without any additional effort.\n            </div>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col-lg-16\">\n            <WidgetsTable\n              variant=\"dark\"\n              headers={buildTableHeaders()}\n              rows={buildTableRowsFromRegistry(registry)}\n              descriptions={descriptions}\n            />\n          </div>\n        </div>\n        <AppFooter />\n      </div>\n    </>\n  );\n};\n\nexport default WidgetsTablePage;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Information16, UserAvatar16 } from '@carbon/icons-react';\nimport { CodeSnippet, Dropdown, Link, ListItem, UnorderedList } from 'carbon-components-react';\n\nexport default function (widgetTypes) {\n  return widgetTypes.map((item) => {\n    return {\n      id: item['shortcode'],\n      name: item['title'],\n      description: item['description'],\n      version: item['version'],\n      owner: item['owner'] ? (\n        <Link href={`mailto:${item['owner'].email}`}>\n          <UserAvatar16 style={{ verticalAlign: 'middle' }} /> {item['owner'].name}\n        </Link>\n      ) : (\n        ''\n      ),\n      translations: (\n        <UnorderedList className=\"bx--list__langcodes\">\n          {item['availableTranslations'].map((langcode) => (\n            <ListItem key={`item-${langcode}`}>\n              <CodeSnippet type=\"inline\">{langcode}</CodeSnippet>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      ),\n      links: (\n        <Dropdown\n          id=\"default\"\n          label=\"- Please select -\"\n          items={[\n            {\n              text: 'Demo',\n              id: `https://pages.${item['repositoryUrl'].substr(8)}`,\n            },\n            {\n              text: 'Repository',\n              id: item['repositoryUrl'],\n            },\n          ]}\n          itemToString={(item) => (item ? item.text : '')}\n          onChange={({ selectedItem: { id: url } }) => {\n            window.location.href = url;\n          }}\n        />\n      ),\n      details: (\n        <RouterLink to={`/widget-type/${item['shortcode']}`}>\n          <Information16 />\n        </RouterLink>\n      ),\n    };\n  });\n}\n","export default function () {\n  return [\n    {\n      key: 'name',\n      header: 'Name',\n      isSortable: true,\n    },\n    {\n      key: 'version',\n      header: 'Version',\n      isSortable: true,\n    },\n    {\n      key: 'translations',\n      header: 'Translations',\n      isSortable: false,\n    },\n    {\n      key: 'owner',\n      header: 'Owner',\n      isSortable: true,\n    },\n    {\n      key: 'links',\n      header: 'Links',\n      isSortable: false,\n    },\n    {\n      key: 'details',\n      header: '',\n      isSortable: false,\n    },\n  ];\n}\n","import WidgetsTablePage from './WidgetsTablePage';\nexport default WidgetsTablePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Take in a phrase and separate the third word in an array\nfunction createArrayFromPhrase(phrase) {\n  const splitPhrase = phrase.split(' ');\n  const thirdWord = splitPhrase.pop();\n  return [splitPhrase.join(' '), thirdWord];\n}\n\nconst InfoSection = ({ className, children, heading }) => (\n  <section className={`bx--row ${className} info-section`}>\n    <div className=\"bx--col-md-8 bx--col-lg-4 bx--col-xlg-3\">\n      <h3 className=\"info-section__heading\">{heading}</h3>\n    </div>\n    {children}\n  </section>\n);\n\nconst InfoCard = (props) => {\n  const splitHeading = createArrayFromPhrase(props.heading);\n\n  return (\n    <article className=\"info-card bx--col-md-4 bx--col-lg-4 bx--col-xlg-3 bx--offset-xlg-1\">\n      <h4 className=\"info-card__heading\">\n        {`${splitHeading[0]} `}\n        <strong>{splitHeading[1]}</strong>\n      </h4>\n      <p className=\"info-card__body\">{props.body}</p>\n      {props.icon}\n    </article>\n  );\n};\n\nInfoSection.propTypes = {\n  className: PropTypes.string,\n  heading: PropTypes.string,\n  children: PropTypes.any,\n};\n\nInfoCard.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n  icon: PropTypes.element,\n};\n\nexport { InfoSection, InfoCard };\n","import React from 'react';\nimport { InfoCard, InfoSection } from '../Info';\nimport { Application32, Migrate32, SettingsAdjust32 } from '@carbon/icons-react';\n\nconst AppFooter = () => (\n  <InfoSection heading=\"The Principles\" className=\"landing-page__r3\">\n    <InfoCard\n      heading=\"Widgets are Configurable\"\n      body='Build once and embed many times. Configure your widgets when embedding to leverage the same widget in multiple situations. \"Tweak the widget knobs and stamp\".'\n      icon={<SettingsAdjust32 />}\n    />\n    <InfoCard\n      heading=\"Widgets are Modular\"\n      body=\"Widgets are designed to work seamlessly with each other in any digital experience. Use them in a website, or an application, as your digital building blocks.\"\n      icon={<Application32 />}\n    />\n    <InfoCard\n      heading=\"Widgets are Consistent\"\n      body=\"Weather your organization uses a CMS, static HTML, or any other tech widgets stay the same. Feel free to re-platform while keeping your widgets intact. Leverage the CMS integrations for a better editorial experience.\"\n      icon={<Migrate32 />}\n    />\n  </InfoSection>\n);\n\nexport default AppFooter;\n","import AppFooter from './AppFooter';\nexport default AppFooter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\n\nconst AppHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Widget Catalog\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"JS Widgets\">\n          Widget Catalog\n        </HeaderName>\n        <HeaderNavigation aria-label=\"Widget Catalog\">\n          <HeaderMenuItem element={Link} to=\"/widget-types\">\n            Widget Types\n          </HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav aria-label=\"Side navigation\" expanded={isSideNavExpanded} isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem element={Link} to=\"/widget-types\">\n                Widget Types\n              </HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar />\n      </Header>\n    )}\n  />\n);\n\nexport default AppHeader;\n","import AppHeader from './AppHeader';\nexport default AppHeader;\n"],"sourceRoot":""}